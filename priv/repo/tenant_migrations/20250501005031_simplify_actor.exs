defmodule Warui.Repo.TenantMigrations.SimplifyActor do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    rename table(:transfers), :owner_id, to: :user_id

    drop constraint(:transfers, "transfers_owner_id_fkey")

    alter table(:transfers, prefix: prefix()) do
      modify :user_id,
             references(:users,
               column: :id,
               name: "transfers_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    rename table(:ledgers), :owner_id, to: :user_id

    drop constraint(:ledgers, "ledgers_owner_id_fkey")

    alter table(:ledgers, prefix: prefix()) do
      modify :user_id,
             references(:users,
               column: :id,
               name: "ledgers_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    rename table(:accounts), :owner_id, to: :user_id

    drop constraint(:accounts, "accounts_owner_id_fkey")

    alter table(:accounts, prefix: prefix()) do
      modify :user_id,
             references(:users,
               column: :id,
               name: "accounts_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end

  def down do
    drop constraint(:accounts, "accounts_user_id_fkey")

    alter table(:accounts, prefix: prefix()) do
      modify :owner_id,
             references(:users,
               column: :id,
               name: "accounts_owner_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    rename table(:accounts), :user_id, to: :owner_id

    drop constraint(:ledgers, "ledgers_user_id_fkey")

    alter table(:ledgers, prefix: prefix()) do
      modify :owner_id,
             references(:users,
               column: :id,
               name: "ledgers_owner_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    rename table(:ledgers), :user_id, to: :owner_id

    drop constraint(:transfers, "transfers_user_id_fkey")

    alter table(:transfers, prefix: prefix()) do
      modify :owner_id,
             references(:users,
               column: :id,
               name: "transfers_owner_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    rename table(:transfers), :user_id, to: :owner_id
  end
end
